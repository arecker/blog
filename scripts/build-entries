#!/usr/bin/env python
import argparse
import dataclasses
import datetime
import pathlib
import re

from lib import Page, dump_json

parser = argparse.ArgumentParser()
parser.add_argument('--entries', required=True)
parser.add_argument('--data', required=True)

r_metadata = re.compile(
        r'^\s?<!--\s?meta:(?P<key>[A-za-z]+)\s?(?P<value>.*)\s?-->$',
        re.MULTILINE)

def make_page(path):
    kwargs = {}

    kwargs['filename'] = path.name
    kwargs['date'] = datetime.datetime.strptime(path.stem, '%Y-%m-%d')
    kwargs['title'] = kwargs['date'].strftime('%A, %B %-d %Y')

    with path.open() as f:
        metadata = [(k, v) for k, v in r_metadata.findall(f.read())]
        metadata = dict([(k.strip(), v.strip()) for k, v in metadata])
        kwargs.update({
            'banner': metadata.get('banner'),
            'description': metadata['title'],
        })

    return Page(**kwargs)


def main(args):
    entries_dir = pathlib.Path(args.entries)
    data_dir = pathlib.Path(args.data)

    for path in entries_dir.glob('*.html'):
        page = make_page(path)
        data = dataclasses.asdict(page)
        data = dump_json(data)
        with (data_dir / f'{path.stem}.json').open('w') as f:
            f.write(data)


if __name__ == '__main__':
    args = parser.parse_args()
    main(args)
