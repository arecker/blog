#!/usr/bin/env python

import argparse
import os
import shutil


parser = argparse.ArgumentParser(description='mange static building')
parser.add_argument('command', choices=['targets', 'sources', 'build'])

EXCLUDE_DIRS = [
    'data',
    'old',
    'scripts',
    'spec',
    'src',
]


def filter_dirs(dir):
    if not os.path.isdir(dir):
        return False
    if dir.startswith('_'):
        return False
    if dir.startswith('.'):
        return False
    if dir == 'www':
        return False
    if dir in EXCLUDE_DIRS:
        return False
    return True


here = os.path.dirname(os.path.realpath(__file__))
root = os.path.abspath(os.path.join(here, '..'))


def compute_sources():
    return sorted(filter(filter_dirs, os.listdir(root)))


def compute_targets():
    return [f'www/{s}' for s in compute_sources()]


static_map = dict(zip(compute_sources(), compute_targets()))


def build():
    for source, target in static_map.items():
        source = os.path.join(root, source)
        target = os.path.join(root, target)
        shutil.rmtree(target, ignore_errors=True)
        shutil.copytree(source, target)


def main():
    args = parser.parse_args()

    if args.command == 'sources':
        print(' '.join(compute_sources()))
    elif args.command == 'targets':
        print(' '.join(compute_targets()))
    elif args.command == 'build':
        build()

if __name__ == '__main__':
    main()
