#!/usr/bin/env bash

set -e

CURRENT_VERSION="$(cat VERSION)"

log() {
    echo "bump: $1" 1>&2
}

usage() {
    cat <<EOF
bump - increment the version

Usage:
    bump <major|minor|patch>
EOF
}

patch() {
    echo "$CURRENT_VERSION" | sed -E 's/([0-9]*)\.([0-9]*)\.([0-9]*)/\3/'
}

minor() {
    echo "$CURRENT_VERSION" | sed -E 's/([0-9]*)\.([0-9]*)\.([0-9]*)/\2/'
}

major() {
    echo "$CURRENT_VERSION" | sed -E 's/([0-9]*)\.([0-9]*)\.([0-9]*)/\1/'
}

case "$1" in
    "major")
        NEXT_VERSION="$((( $(major) + 1 ))).$(minor).$(patch)"
        ;;
    "minor")
        NEXT_VERSION="$(major).$((( $(minor) + 1 ))).$(patch)"
        ;;
    "patch")
        NEXT_VERSION="$(major).$(minor).$((( $(patch) + 1 )))"
        ;;
    *)
        usage
        exit 1
        ;;
esac

log "bumping $1 version [${CURRENT_VERSION} -> ${NEXT_VERSION}]"

MESSAGE="bump: ${CURRENT_VERSION} -> ${NEXT_VERSION}"
TAG="v${NEXT_VERSION}"
REMOTE="origin"
BRANCH="master"

log "writing VERSION file [${NEXT_VERSION}]"
# echo "${NEXT_VERSION}" > VERSION

log "updating src/version.go [const VERSION = \"${NEXT_VERSION}\"]"
sed -i "s/$CURRENT_VERSION/$NEXT_VERSION/" src/version.go

log "writing commit [$MESSAGE]"
# git add -A && git commit -m "$MESSAGE"

log "creating tag [$TAG]"
# git tag -a "$TAG" -m "$MESSAGE"

log "pushing [$REMOTE:$BRANCH]"
# git push --atomic "$REMOTE" "$BRANCH" "v${NEXT_VERSION}"
