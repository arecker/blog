#!/usr/bin/env bash

set -e

log() {
    echo "bump: $1" 1>&2
}

if [[ -z "${BLOG_PATH}" ]]; then
    log "please set a BLOG_PATH=\"\""
    exit 1
else
    cd "$BLOG_PATH"
fi

BLOG_SED="${BLOG_SED:-sed}"
CURRENT_VERSION="$(cat VERSION)"

usage() {
    cat <<EOF
bump - increment the version

Usage:
    bump <major|minor|patch>
EOF
}

patch() {
    echo "$CURRENT_VERSION" | "$BLOG_SED" -E 's/([0-9]*)\.([0-9]*)\.([0-9]*)/\3/'
}

minor() {
    echo "$CURRENT_VERSION" | "$BLOG_SED" -E 's/([0-9]*)\.([0-9]*)\.([0-9]*)/\2/'
}

major() {
    echo "$CURRENT_VERSION" | "$BLOG_SED" -E 's/([0-9]*)\.([0-9]*)\.([0-9]*)/\1/'
}

latest_tag() {
    git describe --abbrev=0
}

changelog() {
    git shortlog "$(latest_tag)..HEAD"
}

github_curl() {
    curl \
        -s \
        -H "Authorization: token $(pass github/blog)" \
        -H "application/vnd.github.v3+json " \
        -H "Content-Type:application/json" \
        $@
}

create_release_payload() {
    cat <<EOF
{
  "tag_name": "v${NEXT_VERSION}",
  "name": "${NEXT_VERSION}"
  "body": "${MESSAGE}\n\n$(changelog)",
  "draft": false,
  "prerelease": false
}
EOF
}

create_release() {
    local url="https://api.github.com/repos/arecker/blog/releases"
    github_curl -X POST -d "$(create_release_payload)" "$url"
}

case "$1" in
    "major")
        NEXT_VERSION="$((( $(major) + 1 ))).$(minor).$(patch)"
        ;;
    "minor")
        NEXT_VERSION="$(major).$((( $(minor) + 1 ))).$(patch)"
        ;;
    "patch")
        NEXT_VERSION="$(major).$(minor).$((( $(patch) + 1 )))"
        ;;
    *)
        usage
        exit 1
        ;;
esac

log "bumping $1 version [${CURRENT_VERSION} -> ${NEXT_VERSION}]"

MESSAGE="bump $1: ${CURRENT_VERSION} -> ${NEXT_VERSION}"
TAG="v${NEXT_VERSION}"
REMOTE="origin"
BRANCH="master"

log "writing VERSION file [${NEXT_VERSION}]"
echo "${NEXT_VERSION}" > VERSION

log "updating src/version.go [const VERSION = \"${NEXT_VERSION}\"]"
"$BLOG_SED" -i "s/$CURRENT_VERSION/$NEXT_VERSION/" src/version.go

log "writing commit [$MESSAGE]"
git add -A &> /dev/null
git commit -m "$MESSAGE

$(changelog)" &> /dev/null

log "creating tag [$TAG]"
git tag -a "$TAG" -m "$MESSAGE

$(changelog)" &> /dev/null

log "pushing [$REMOTE:$BRANCH]"
git push --atomic "$REMOTE" "$BRANCH" "v${NEXT_VERSION}" &> /dev/null

log "creating release"
echo "$(create_release)"
